i18n = require("i18n")
require("locales")

constants = require("Constants")

helper = require("HelperModule")

boardCommonModule = require("BoardCommonModule")

-- Beware that this variable is processed on loading to resolve its GUIDs.
baseStructure = {
    spaces = {
        SecureContract = 'db4022',
        SellMelange = '7539a3',
        RallyTroops = '6932df',
        Swordmaster = '6cc2f8',
        HallOfOratory = '3e7409'
    }
}

_ = require("Core").registerLoadablePart(function()
    self.interactable = false
    activateButtons()
end)

function onLocaleChange()
    self.clearButtons()
    activateButtons()
end

function activateButtons()
    boardCommonModule.createActivationButton("SecureContract", "get", {2.2, 0.1, 0.58})
    boardCommonModule.createActivationButton("SellMelange2", "↓", {2.165, 0.1, -0.66})
    boardCommonModule.createActivationButton("SellMelange3", "↓", {2.344, 0.1, -0.66})
    boardCommonModule.createActivationButton("SellMelange4", "↓", {2.515, 0.1, -0.66})
    boardCommonModule.createActivationButton("SellMelange5", "↓", {2.69, 0.1, -0.66})
    boardCommonModule.createActivationButton("HighCouncil", "pay & get", {-2, 0.1, -0.15})
    boardCommonModule.createActivationButton("Mentat", "pay & get", {-2, 0.1, 0.65})
    boardCommonModule.createActivationButton("RallyTroops", "pay & get", {-0.55, 0.1, 0.65})
    boardCommonModule.createActivationButton("Swordmaster", "pay & get", {0.72, 0.1, 0.65})
    boardCommonModule.createActivationButton("HallOfOratory", "get", {0.7, 0.1, -0.1})
end

function forwardCall(spaceName, color, zone)
    self.clearButtons()
    Wait.time(activateButtons, 1)
    if zone then
        boardCommonModule[spaceName](color, zone)
    else
        boardCommonModule[spaceName](color)
    end
end

function Swordmaster(_, color)
    forwardCall("Swordmaster", color, baseStructure.spaces.Swordmaster)
end

function Mentat(_, color)
    forwardCall("Swordmaster", color, structure.spaces.Mentat)
end

function HighCouncil(_, color)
    forwardCall("Swordmaster", color, structure.spaces.HighCouncil)
end

function SecureContract(_, color)
    if helper.startPlayerAction(color, baseStructure.spaces.SecureContract) then
        local leaderName = helper.getLeaderName(color)
        boardCommonModule.gainResource(color, "solari", 3)
        broadcastToAll(i18n("secureContract"):format(leaderName), color)
    end
end

function sellMelange(color, spiceAmount, solariAmount)
    if helper.startPlayerAction(color, baseStructure.spaces.SellMelange) then
        local leaderName = helper.getLeaderName(color)
        if boardCommonModule.payResource(color, "spice", spiceAmount) then
            boardCommonModule.gainResource(color, "solari", solariAmount)
            broadcastToAll(i18n("sellMelange"):format(leaderName, spiceAmount, solariAmount), color)
        end
    end
end

function SellMelange2(_, color)
    sellMelange(color, 2, 6)
end

function SellMelange3(_, color)
    sellMelange(color, 3, 8)
end

function SellMelange4(_, color)
    sellMelange(color, 4, 10)
end

function SellMelange5(_, color)
    sellMelange(color, 5, 12)
end

function RallyTroops(_, color)
    if helper.startPlayerAction(color, baseStructure.spaces.RallyTroops) then
        local leaderName = helper.getLeaderName(color)

        local solariPrice = 4
        if leaderName == "Duke Leto" then
            solariPrice = 3
        end

        if boardCommonModule.payResource(color, "solari", solariPrice) then
            helper.landTroopsFromOrbit(color, 4)

            if leaderName == "Count Ilban" then
                local drawCount = 1
                if boardCommonModule.drawCardsFromPlace(color, "arrakeen", drawCount) then
                    broadcastToAll(i18n("rallyTroops"):format(leaderName, solariPrice) .. i18n("et") .. i18n("drawOneCard"), color)
                else
                    broadcastToAll(i18n("rallyTroops"):format(leaderName, solariPrice) .. ".", color)
                end
            else
                broadcastToAll(i18n("rallyTroops"):format(leaderName, solariPrice) .. ".", color)
            end
        end
    end
end

function HallOfOratory(_, color)
    if helper.startPlayerAction(color, baseStructure.spaces.HallOfOratory) then
        local leaderName = helper.getLeaderName(color)
        helper.landTroopsFromOrbit(color, 1)
        broadcastToAll(i18n("oratory"):format(leaderName), color)
    end
end
