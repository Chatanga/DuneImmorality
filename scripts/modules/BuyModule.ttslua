buyModule = {}

core = require("Core")

i18n = require("i18n")
require("locales")

constants = require("Constants")

helper = require("HelperModule")

function buyModule.buy(zone, color, buyTleilaxu)
    local card = helper.getCard(zone)
    if card and helper.startPlayerAction(color) then
        if not buyTleilaxu or buyModule.paySpecimenPrice(color, card) then
            local player = constants.players[color]

            -- Acquire the card.
            card.setPosition(player.discardPosition)

            -- Move it on the top of the player deck if possible and wanted.
            if buyTleilaxu and helper.hasReachedResearchLevelOne(color) or helper.hasTech(color, "Spaceport") then
                Player[color].showConfirmDialog(
                    i18n("dialogCardAbove"),
                    function(_)
                        helper.moveCardFromZone(player.discardZone, player.drawDeckZone.getPosition(), Vector(0, 180, 180), false)
                    end)
            end

            -- Replenish the slot in the row.
            local deckZone
            if buyTleilaxu then
                deckZone = getObjectFromGUID(constants.tleilaxuDeckZone)
            else
                deckZone = getObjectFromGUID(constants.imperiumDeckZone)
            end
            helper.moveCardFromZone(deckZone, zone.getPosition(), Vector(0, 180, 0), false)
        end
    end
end

function buyModule.paySpecimenPrice(color, card)
    local setup = getObjectFromGUID("4a3e76")
    local price = setup.call("getTleilaxuCardPrice", card)

    local specimenCount = helper.getSpecimenCount(color)

    if price > specimenCount then
        broadcastToColor(i18n("notEnoughSpecimen"), color, "Red")
        return false
    end

    Wait.time(
        function()
            getObjectFromGUID("d5c2db").Call("RemoveSpecimenCall", {color = color, silent = true})
        end,
        0.3, price)

    local specimen = i18n("specimens")
    if price == 1 then
        specimen = i18n("specimen")
    end

    local leaderName = helper.getLeaderName(color)
    broadcastToAll(i18n("acquiredTleilaxu"):format(leaderName, price, specimen), color)

    return true
end

return buyModule
