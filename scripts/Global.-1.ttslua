locale = 'en'

battleSound = nil

function onLoad()

    i18n = require("i18n")
    require("locales") -- if using a separate file for the locales, require it too

    localeAssets = require("localeAssets")
    localeAssets.load()

    -- Réinitialise les triggers des plateaux de joueurs.
    onPlayerTurn(nil, nil)

    -- getObjectFromGUID("0552a2").setState(1)

    constants = require("Constants")

    helperModule = require("HelperModule")

    drawDeckZone = constants.drawDeckZone

    DrawOne = helperModule.DrawOne

    ResetDiscard = helperModule.ResetDiscard

    GetDeckOrCard = helperModule.GetDeckOrCard

    ressources = constants.ressources

    buttonPass = {
        ["Red"] = getObjectFromGUID("0e9fa2"),
        ["Blue"] = getObjectFromGUID("643f32"),
        ["Green"] = getObjectFromGUID("9c69b9"),
        ["Yellow"] = getObjectFromGUID("65876d")
    }

    pos_reveal = {
        ["Red"] = {-13.2, 1.8, 9.40}, -- location of first reveal snap point
        ["Blue"] = {-13.2, 1.8, -12.79},
        ["Green"] = {13.2, 1.8, 9.40},
        ["Yellow"] = {13.2, 1.8, -12.79}
    }
    board_player = {
        ["Red"] = getObjectFromGUID("75561d"),
        ["Blue"] = getObjectFromGUID("d72200"),
        ["Green"] = getObjectFromGUID("e6396b"),
        ["Yellow"] = getObjectFromGUID("036b6a")
    }

    flag_basin_zone = getObjectFromGUID("3fe117") -- token below board at basin control position
    flag_arrakeen_zone = getObjectFromGUID("f1f53d")
    flag_carthag_zone = getObjectFromGUID("9fc2e1")
    flag_basin_pos = {5.96, 1.67, 0.13}
    flag_arrakeen_pos = {6.23, 1.67, 3.53}
    flag_carthag_pos = {2.40, 1.68, 2.77}

    -------------HiddenPicks var section--------------7--       -- This table is used in onObjectEnter and onObjectLeave to make objects invisible during picking phase
    hidingStateTable =
        { -- Must be in global since you can't pass tables with getVar()
            [1] = {"Red", "Blue", "Yellow", "Grey", "White"}, -- 1 = Green picking his leader: make leaders invisible to all other players
            [2] = {"Blue", "Yellow", "Green", "Grey", "White"}, -- 2 = Red picking his leader: make leaders invisible to all other players
            [3] = {"Red", "Yellow", "Green", "Grey", "White"},
            [4] = {"Red", "Blue", "Green", "Grey", "White"},
            [5] = {"Red", "Blue", "Yellow", "Green", "Grey", "White"}, -- 5 = make Leader invisible to all: this is during leader random ban, Important: Black cannot be set invisible and will see bans
            [6] = {} -- 6 = make Leader visible to all: after picking process, for players to see unpicked leaders
        }
    hidingState = 0 -- used as index for hidingStateTable

    function setHidingState(hidingStatePassed)
        hidingState = hidingStatePassed[1]
    end

    hidingLeaderScriptingZone = getObjectFromGUID("550f6d") -- Big scripting zone to hide leader in blind pick

    -----------------End section------------------------

    nom = nil
    zone_conflict_encours = getObjectFromGUID("43f00f") -- ???small zone top rigth of conflict card
    zone_vp_encours = getObjectFromGUID("740624") -- ..for conflict vp placement

    reveal = {
        ["Red"] = 0, -- initialization of bool if they have reveal ?
        ["Blue"] = 0,
        ["Green"] = 0,
        ["Yellow"] = 0
    }

    fight = 0 -- initialization ??
    marker_round = getObjectFromGUID("fb41e2") -- round marker
    vp_pos = constants.pos_vp

    bag_friendship = { -- bag for 2 influence vp with factions
        ["Emperor"] = getObjectFromGUID('6a4186'),
        ["Spacing Guild"] = getObjectFromGUID('400d45'),
        ["Bene Gesserit"] = getObjectFromGUID('e763f6'),
        ["Fremen"] = getObjectFromGUID('8bcfe7')
    }

    alliance_token = {
        ["Emperor"] = getObjectFromGUID('13e990'),
        ["Spacing Guild"] = getObjectFromGUID('ad1aae'),
        ["Bene Gesserit"] = getObjectFromGUID('33452e'),
        ["Fremen"] = getObjectFromGUID('4c2bcc')
    }

    vp_zone = { -- scripting zone in vp track
        ["Red"] = getObjectFromGUID('5b9a53'),
        ["Blue"] = getObjectFromGUID('376f34'),
        ["Green"] = getObjectFromGUID('0e374f'),
        ["Yellow"] = getObjectFromGUID('b25c3c')
    }

    flag_bag = { -- infinite bag for flags
        ["Red"] = getObjectFromGUID('61453d'),
        ["Blue"] = getObjectFromGUID('8627e0'),
        ["Green"] = getObjectFromGUID('ad6b92'),
        ["Yellow"] = getObjectFromGUID('b92a4c')
    }

    zone_conseil = getObjectFromGUID("e51f6e") -- scripting zone high consil
    -- pion_reput = {
    --     ["Emperor Faction"] = {["Red"] = getObjectFromGUID('aae631'), ["Blue"] = getObjectFromGUID('aae631'), ["Green"] = getObjectFromGUID('aae631'), ["Yellow"] = getObjectFromGUID('aae631')},
    --     ["Spacing Guild Faction"] = {["Red"] = getObjectFromGUID('aae631'), ["Blue"] = getObjectFromGUID('aae631'), ["Green"] = getObjectFromGUID('aae631'), ["Yellow"] = getObjectFromGUID('aae631')},
    --     ["Bene Gesserit Faction"] = {["Red"] = getObjectFromGUID('aae631'), ["Blue"] = getObjectFromGUID('aae631'), ["Green"] = getObjectFromGUID('aae631'), ["Yellow"] = getObjectFromGUID('aae631')},
    --     ["Fremen Faction"] = {["Red"] = getObjectFromGUID('aae631'), ["Blue"] = getObjectFromGUID('aae631'), ["Green"] = getObjectFromGUID('aae631'), ["Yellow"] = getObjectFromGUID('aae631')}
    -- }

    zone_reput = {
        ["Emperor"] = getObjectFromGUID('aae631'), -- zone medium size were alliance goes
        ["Spacing Guild"] = getObjectFromGUID('768e1e'),
        ["Bene Gesserit"] = getObjectFromGUID('bd1e3b'),
        ["Fremen"] = getObjectFromGUID('4a1ce8')
    }

    zone_player = constants.zone_player

    -- 20 spaces were you put power marker
    marker_combat_pos = {
        {0.82, 3, -9.14}, {1.73, 3, -9.14}, {2.65, 3, -9.14}, {3.55, 3, -9.14},
        {4.46, 3, -9.14}, {5.33, 3, -9.14}, {6.23, 3, -9.14}, {7.15, 3, -9.14},
        {8.07, 3, -9.14}, {8.95, 3, -9.14}, {0.82, 3, -10.13},
        {1.74, 3, -10.13}, {2.65, 3, -10.13}, {3.55, 3, -10.13},
        {4.46, 3, -10.13}, {5.33, 3, -10.13}, {6.23, 3, -10.13},
        {7.15, 3, -10.13}, {8.07, 3, -10.13}, {8.95, 3, -10.13}
    }
    marker_combat_pos_ini = {
        ["Blue"] = {1.28, 1.58, -8.15},
        ["Green"] = {3.48, 1.58, -8.15},
        ["Red"] = {2.35, 1.58, -8.15},
        ["Yellow"] = {4.55, 1.58, -8.15}
    }
    zone_combat = getObjectFromGUID("6d632e") -- doesnt include garnisons
    marker_combat = {
        ["Red"] = getObjectFromGUID('2d1d17'),
        ["Blue"] = getObjectFromGUID('f22e20'),
        ["Green"] = getObjectFromGUID('a1a9a7'),
        ["Yellow"] = getObjectFromGUID('c2dd31')
    }
    VP_name = { -- conflit vp names + GUIDs
        ["Economic Supremacy"] = {"c38946", "6047f9", "4f428d", "ba1a77"},
        ["Battle for Carthag"] = {"e364df", "e123ce"},
        ["Battle for Arrakeen"] = {"e25f79", "8b658c"},
        ["Battle for Imperial Basin"] = {"ff1ce6", "905a58"},
        ["Siege of Carthag"] = {"f131f2"},
        ["Siege of Arrakeen"] = {"29a66c"},
        ["Secure Imperial Basin"] = {"2d469b"},
        ["Terrible Purpose"] = {"d61804"},
        ["Desert Power"] = {"11076b"},
        ["Skirmish"] = {"63791b"}
    }
    reserve_troop_zone = constants.reserve_troop_zone

    zone_vp_combat = getObjectFromGUID("988577") -- ???
    pos_vp_encours = {
        {-0.45, 2, -3.57}, {-0.45, 2, -2.57}, {-0.45, 3, -3.57},
        {-0.45, 3, -2.57}
    }

    players_color = {"Red", "Blue", "Green", "Yellow"}

    board_display_leaders = getObjectFromGUID("823bd3")

    for _, color in ipairs(players_color) do
        activateButtons(color)
    end

    --rendre impossible à delock les plateaux

    --FF--getObjectFromGUID("8b1f92").interactable = false
    --FF--getObjectFromGUID("96b94b").interactable = false
    --FF--getObjectFromGUID("d69aec").interactable = false
    --FF--getObjectFromGUID("b24cc5").interactable = false
    getObjectFromGUID("90f762").interactable = false
    bag_friendship["Emperor"].interactable = false
    bag_friendship["Spacing Guild"].interactable = false
    bag_friendship["Bene Gesserit"].interactable = false
    bag_friendship["Fremen"].interactable = false
    --FF--getObjectFromGUID("7ded4f").interactable = false
    for _, color in pairs(players_color) do
        ressources[color][9].interactable = false -- conseillers
        buttonPass[color].interactable = false
        board_player[color].interactable = false
    end

    getObjectFromGUID("2da390").interactable = true


    for _, obj in ipairs(getObjects()) do
        if (obj.getDescription() == "Techs FR" and locale == 'en') or (obj.getDescription() == "Techs EN" and locale == 'fr') then
            obj.setInvisibleTo({"Red", "Blue", "Green", "Yellow", "White", "Grey", "Brown", "Pink", "Purple", "Orange"})
        end
    end
end

function doNothing() end

function revealEarly(color)
    if color == 'Blue' or color == "Red" then
        pos1 = helperModule.addVector3D(buttonPass[color].getPosition(), {-2.1, 1.02, 1.235}) --FF-- {-2.1, 0.02, 1.235}
        pos2 = helperModule.addVector3D(buttonPass[color].getPosition(), {-2.3, 1.02, 1.35}) --FF-- {-2.3, 0.02, 1.35}
        pos3 = helperModule.addVector3D(buttonPass[color].getPosition(), {-1.9, 1.02, 1.35}) --FF-- {-1.9, 0.02, 1.35}
    else
        pos1 = helperModule.addVector3D(buttonPass[color].getPosition(), {2.1, 1.02, 1.235}) --FF-- {2.1, 0.02, 1.235}
        pos3 = helperModule.addVector3D(buttonPass[color].getPosition(), {2.3, 1.02, 1.35}) --FF-- {2.3, 0.02, 1.35}
        pos2 = helperModule.addVector3D(buttonPass[color].getPosition(), {1.9, 1.02, 1.35}) --FF-- {1.9, 0.02, 1.35}
    end
    buttonPass[color].createButton({
        ['click_function'] = 'doNothing',
        ['label'] = i18n("revealEarlyConfirm"),
        ['function_owner'] = Global,
        ['position'] = pos1,
        ['rotation'] = {0, 0, 0},
        ['width'] = 0,
        ['height'] = 0,
        ['scale'] = {0.15, 0.15, 0.15},
        ['font_size'] = 350,
        ['font_color'] = color,
        ['color'] = {0, 0, 0, 1}
    })
    buttonPass[color].createButton({
        ['click_function'] = 'RevealOK',
        ['label'] = i18n('yes'),
        ['function_owner'] = Global,
        ['position'] = pos2,
        ['rotation'] = {0, 0, 0},
        ['width'] = 600,
        ['height'] = 350,
        ['scale'] = {0.15, 0.15, 0.15},
        ['font_size'] = 350,
        ['font_color'] = {1, 1, 1},
        ['color'] = "Green"
    })
    buttonPass[color].createButton({
        ['click_function'] = 'cancelChoice',
        ['label'] = i18n('no'),
        ['function_owner'] = Global,
        ['position'] = pos3,
        ['rotation'] = {0, 0, 0},
        ['width'] = 600,
        ['height'] = 350,
        ['scale'] = {0.15, 0.15, 0.15},
        ['font_size'] = 350,
        ['font_color'] = {1, 1, 1},
        ['color'] = "Red"
    })
end

function cancelChoice(board, color)
    if board.hasTag(color) then
        buttonPass[color].clearButtons()
        activateButtons(color)
    else
        broadcastToColor(i18n('noTouch'), color, "Purple")
    end
end

function activateButtons(color) -- creates button in player zone with position relative to leader board: reveal, reset discard, draw 1, draw 5
    if color == "Red" or color == "Blue" then
        position_reveal_button = {-2.1, 0.52, 1.1}
        tech_button_pos = {-3.5, 0.2, -0.8}
    else
        position_reveal_button = {2.1, 0.52, 1.1}
        tech_button_pos = {3.5, 0.2, -0.8}
    end
    if color == 'Yellow' then
        font_color = {0.1, 0.1, 0.1, 1}
    else
        font_color = {0.9, 0.9, 0.9, 1}
    end

    buttonPass[color].createButton({
        click_function = "Reveal",
        function_owner = Global,
        label = i18n("revealButton"),
        position = position_reveal_button,
        scale = {0.15, 0.3, 0.15},
        width = 2200,
        height = 400,
        font_size = 400,
        color = color,
        font_color = font_color
    })
    buttonPass[color].createButton({
        click_function = "ResetDiscardColor",
        function_owner = Global,
        label = i18n("resetDiscardButton"),
        position = {1.08, 0.2, 0.43},
        scale = {0.055, 0.3, 0.055},
        width = 3700,
        height = 700,
        font_size = 400,
        color = color,
        font_color = font_color
    })
    buttonPass[color].createButton({
        click_function = "DrawFive",
        function_owner = Global,
        label = i18n("drawFiveButton"),
        position = {-1.1, 0.2, 0.43},
        scale = {0.055, 0.3, 0.055},
        width = 3700,
        height = 700,
        font_size = 400,
        color = color,
        font_color = font_color
    })
    buttonPass[color].createButton({
        click_function = "DrawOneColor",
        function_owner = Global,
        label = i18n("drawOneButton"),
        position = {-1.1, 0.2, 0.6},
        scale = {0.06, 0.3, 0.06},
        width = 2900,
        height = 1100,
        font_size = 400,
        color = color,
        font_color = font_color
    })

    buttonPass[color].createButton({
        click_function = "doNothing",
        function_owner = Global,
        label = i18n("agentTurn"),
        position = {0, 0.52, 1.1},
        scale = {0.15, 0.3, 0.15},
        width = 0,
        height = 0,
        font_size = 400,
        color = {0,0,0,1},
        font_color = color
    })
    buttonPass[color].createButton({
        click_function = "doNothing",
        function_owner = Global,
        label = i18n("putTechHere"),
        position = tech_button_pos,
        scale = {0.5, 0.5, 0.5},
        width = 0,
        height = 0,
        font_size = 190,
        color = {0,0,0,1},
        font_color = color
    })
end

function activatePass(color)
    buttonPass[color].createButton({
        click_function = "Pass",
        function_owner = self,
        label = i18n("passButton"),
        position = {0, 1, 0},
        scale = {0.5, 0.5, 0.5},
        width = 2750,
        height = 2000,
        font_size = 800,
        color = "Purple",
        font_color = {0.9, 0.9, 0.9, 1}
    })
end

function Reveal(board, color)
    if board.hasTag(color) then
        local players = getObjectFromGUID("4a3e76").call(
                            "getPlayersBasedOnHotseat")
        local test_agent = testAgent(color)
        local turnColor = nil
        if getObjectFromGUID("4a3e76").getVar("hotseat_mode") then
            turnColor = Player.getPlayers()[1].color
        else
            turnColor = Turns.turn_color
        end
        if turnColor ~= color and #players > 1 then
            broadcastToColor(i18n("revealNotTurn"), color, "Pink")
        elseif test_agent then
            revealEarly(color)
        else
            RevealOK(_, color)
        end
    else
        broadcastToColor(i18n('noTouch'), color, "Purple")
    end

end

function RevealOK(_, color)
    buttonPass[color].clearButtons()
    Wait.time(function() activateButtons(color) end, 2)
    local player_hand_table = Player[color].getHandObjects()
    local count = 0
    local c = 0
    local d = 0
    local t = 0
    for _, obj in ipairs(player_hand_table) do
        if obj.hasTag('Imperium') then
            Wait.time(function()
                if count < 10 then
                    obj.setPosition({
                        pos_reveal[color][1] + c, 1.8, pos_reveal[color][3] + d
                    })
                    if color == "Yellow" or color == "Green" then
                        c = c + 2.5
                        count = count + 1
                        if count == 8 then
                            c = 15
                            d = 3.6
                        end
                    end
                    if color == "Red" or color == "Blue" then
                        c = c - 2.5
                        count = count + 1
                        if count == 8 then
                            c = -15
                            d = 3.6
                        end
                    end

                end
            end, t)
            t = t + 0.25
        end
    end
    Wait.time(function()
        reveal[color] = 1
        -- TableTurnPlayers()
        Turns.enable = false
        local players = getObjectFromGUID("4a3e76").call(
                            "getPlayersBasedOnHotseat")
        if #players > 1 then activatePass(color) end
    end, 1)
end

function testAgent(color)
    local test = false
    for _, obj in ipairs(constants.zone_player[color].getObjects()) do
        if obj.hasTag("Agent") then
            test = true
            return test
        end
    end
    return test
end

function Pass(_, color)
    if color ~= buttonPass[color].getDescription() then
        broadcastToColor(i18n("noTouch"), color, "Red")
    elseif reveal["Blue"] == 1 and reveal["Red"] == 1 and reveal["Green"] == 1 and
        reveal["Yellow"] == 1 then
        letsFight()
        buttonPass[color].clearButtons()
    else
        if not getObjectFromGUID("4a3e76").getVar("hotseat_mode") then
            TableTurnPlayers()
        end
        buttonPass[color].clearButtons()
        if color == "Blue" then
            if reveal["Red"] == 0 then
                Turns.turn_color = "Red"
            elseif reveal["Green"] == 0 then
                Turns.turn_color = "Green"
            elseif reveal["Yellow"] == 0 then
                Turns.turn_color = "Yellow"
            else
                Turns.turn_color = "Blue"
            end
        elseif color == "Red" then
            if reveal["Green"] == 0 then
                Turns.turn_color = "Green"
            elseif reveal["Yellow"] == 0 then
                Turns.turn_color = "Yellow"
            elseif reveal["Blue"] == 0 then
                Turns.turn_color = "Blue"
            else
                Turns.turn_color = "Red"
            end
        elseif color == "Green" then
            if reveal["Yellow"] == 0 then
                Turns.turn_color = "Yellow"
            elseif reveal["Blue"] == 0 then
                Turns.turn_color = "Blue"
            elseif reveal["Red"] == 0 then
                Turns.turn_color = "Red"
            else
                Turns.turn_color = "Green"
            end
        elseif color == "Yellow" then
            if reveal["Blue"] == 0 then
                Turns.turn_color = "Blue"
            elseif reveal["Red"] == 0 then
                Turns.turn_color = "Red"
            elseif reveal["Green"] == 0 then
                Turns.turn_color = "Green"
            else
                Turns.turn_color = "Yellow"
            end
        end
        if not getObjectFromGUID("4a3e76").getVar("hotseat_mode") then
            Turns.enable = true
        end

    end
end

function TableTurnPlayers()
    local v = 0
    table_players = {}

    if reveal['Blue'] == 0 then
        v = v + 1
        table_players[v] = 'Blue'
    end
    if reveal['Red'] == 0 then
        v = v + 1
        table_players[v] = 'Red'
    end
    if reveal['Green'] == 0 then
        v = v + 1
        table_players[v] = 'Green'
    end
    if reveal['Yellow'] == 0 then
        v = v + 1
        table_players[v] = 'Yellow'
    end

    Turns.order = table_players
end

function ResetDiscardColor(board, color)
    if board.hasTag(color) then
        buttonPass[color].clearButtons()
        Wait.time(function() activateButtons(color) end, 1)
        ResetDiscard(_, color)
    else
        broadcastToColor(i18n('noTouch'), color, "Purple")
    end
end

function DrawFive(board, color)
    if board.hasTag(color) then

        buttonPass[color].clearButtons()
        Wait.time(function() activateButtons(color) end, 1)

        local starterDeck = GetDeckOrCard(drawDeckZone[color])
        local countCheck = 0
        local typeCheck = ""
        local drawCount = 0

        if starterDeck ~= nil then
            countCheck = starterDeck.getQuantity()
            typeCheck = starterDeck.type

            if countCheck >= 5 and typeCheck == "Deck" then
                starterDeck.deal(5, color)
            elseif countCheck >= 2 and typeCheck == "Deck" then
                starterDeck.deal(countCheck, color)
                drawCount = 5 - countCheck
                ResetDiscard(_, color)
                Wait.time(function()
                    local drawDeck = GetDeckOrCard(drawDeckZone[color])
                    drawDeck.deal(drawCount, color)
                end, 1.5)
            elseif typeCheck == "Card" then
                starterDeck.deal(1, color)
                ResetDiscard(_, color)
                Wait.time(function()
                    local drawDeck = GetDeckOrCard(drawDeckZone[color])
                    drawDeck.deal(4, color)
                end, 1.5)
            end
        else
            ResetDiscard(_, color)
            Wait.time(function()
                local drawDeck = GetDeckOrCard(drawDeckZone[color])
                drawDeck.deal(5, color)
            end, 1.5)
        end
    else
        broadcastToColor(i18n('noTouch'), color, "Purple")
    end
end

function DrawOneColor(board, color)
    if board.hasTag(color) then
        buttonPass[color].clearButtons()
        Wait.time(function() activateButtons(color) end, 0.3)
        DrawOne(_, color)
    else
        broadcastToColor(i18n('noTouch'), color, "Purple")
    end

end

function letsFight()
    Turns.enable = false
    marker_round.setPositionSmooth({-4.12, 1.8, -9.33}, false, false)
    broadcastToAll(i18n("fightWarning"), {0.5, 0.5, 0.5})

    if battleSound ~= nil and board_display_leaders.getVar("sound_active") then
        MusicPlayer.setCurrentAudioclip(battleSound)

        MusicPlayer.play()
    end
    fight = 1
end

function getFight() return fight end

function resetRound()

    local players = nil

    if getObjectFromGUID("4a3e76").getVar(
        "hotseat_mode")  then
        players = {'Red', 'Blue', 'Green', 'Yellow'}
    else
        players = getSeatedPlayers()
    end

    reveal["Red"] = 1
    reveal["Blue"] = 1
    reveal["Green"] = 1
    reveal["Yellow"] = 1
    fight = 0

    for _, value in ipairs(players) do
        if value == "Red" then reveal["Red"] = 0 end
        if value == "Blue" then reveal["Blue"] = 0 end
        if value == "Green" then reveal["Green"] = 0 end
        if value == "Yellow" then reveal["Yellow"] = 0 end
    end
end

function CountForce(name)
    local zoneObjects = zone_combat.getObjects()
    local force = 0
    local conseilObjects = zone_conseil.getObjects()
    local playerObjects = zone_player[name].getObjects()
    local test1 = 0
    local test2 = 0
    for i, object in ipairs(zoneObjects) do
        if object.getName() == name then
            force = force + 2
        elseif object.getName() == name .. " Dreadnought" or object.getName() ==
            name .. " dreadnought" then
            if ressources[name][6].getObjects()[1].hasTag("Rhombur") then
                force = force + 4
            else
                force = force + 3
            end
        end
    end
    for _, obj in ipairs(conseilObjects) do
        if obj.getName() == name .. " Councilor" then test1 = 1 end
    end
    for _, obj in ipairs(playerObjects) do
        if obj.hasTag("Restricted Ordnance") then test2 = 1 end
    end
    if test1 == 1 and test2 == 1 then force = force + 4 end

    if force == 0 then
        marker_combat[name].setPositionSmooth(marker_combat_pos_ini[name],
                                              false, false)

    elseif force < 21 then
        marker_combat[name].setPositionSmooth(marker_combat_pos[force], false,
                                              false)
        marker_combat[name].setRotationSmooth({0, 180, 0})
    else
        marker_combat[name].setPositionSmooth(marker_combat_pos[force - 20],
                                              false, false)
        marker_combat[name].setRotationSmooth({0, 180, 180})
    end
end

function defenseTroop()
    flag = nil
    if nom == "Secure Imperial Basin" or nom == "Battle for Imperial Basin" then
        flag = flag_basin_zone
    elseif nom == "Siege of Arrakeen" or nom == "Battle for Arrakeen" then
        flag = flag_arrakeen_zone
    elseif nom == "Siege of Carthag" or nom == "Battle for Carthag" then
        flag = flag_carthag_zone
    end
    if flag ~= nil then addTroopDefense() end
end

function addTroopDefense()
    local reserve_zone = nil
    local joueur = nil
    local table = flag.getObjects()
    for _, obj in ipairs(table) do
        if obj.getName() == "Red Dreadnought" or obj.getName() ==
            "Red dreadnought" then
            joueur = "Red"
        elseif obj.getName() == "Blue Dreadnought" or obj.getName() ==
            "Blue dreadnought" then
            joueur = "Blue"
        elseif obj.getName() == "Green Dreadnought" or obj.getName() ==
            "Green dreadnought" then
            joueur = "Green"
        elseif obj.getName() == "Yellow Dreadnought" or obj.getName() ==
            "Yellow dreadnought" then
            joueur = "Yellow"
        end
    end
    if joueur == nil then
        for _, obj in ipairs(table) do
            if obj.getName() == "Red Flag" then
                joueur = "Red"
            elseif obj.getName() == "Blue Flag" then
                joueur = "Blue"
            elseif obj.getName() == "Green Flag" then
                joueur = "Green"
            elseif obj.getName() == "Yellow Flag" then
                joueur = "Yellow"
            end
        end
    end
    if joueur ~= nil then
        reserve_zone = reserve_troop_zone[joueur]
        local troops = reserve_zone.getObjects()
        for _, troop in ipairs(troops) do
            if troop.getName() == joueur then
                troop.setPositionSmooth({4.79, 2, -5.19}, false, false)
                local leaderName = ressources[joueur][6].getObjects()[1]
                                       .getName()
                broadcastToAll(i18n("defenseTroop"):format(leaderName), joueur)
                break
            end
        end
    end
end

function onObjectEnterScriptingZone(zone, enter_object)

    -----------------New section------------------------
    if zone.guid == hidingLeaderScriptingZone.guid and hidingState ~= 0 then
        enter_object.setInvisibleTo(hidingStateTable[hidingState])
    end
    -----------------End section------------------------
    if zone.guid == zone_combat.guid then
        local name = enter_object.getDescription()
        if name == "Red" or name == "Blue" or name == "Green" or name ==
            "Yellow" then CountForce(name) end
    end

    if zone.guid == zone_reput["Emperor"].guid then
        local faction = "Emperor"
        local name = enter_object.getName()
        local color = ""

        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then Friendship(faction, color) end
    end

    if zone.guid == zone_reput["Spacing Guild"].guid then
        local faction = "Spacing Guild"
        local name = enter_object.getName()
        local color = ""

        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then Friendship(faction, color) end
    end

    if zone.guid == zone_reput["Bene Gesserit"].guid then
        local faction = "Bene Gesserit"
        local name = enter_object.getName()
        local color = ""

        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then Friendship(faction, color) end
    end

    if zone.guid == zone_reput["Fremen"].guid then
        local faction = "Fremen"
        local name = enter_object.getName()
        local color = ""

        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then Friendship(faction, color) end
    end

    if zone.guid == zone_conflict_encours.guid then
        if enter_object.guid == '2b2575' then
            enter_object.setPosition({4.80, 2, -2.73})
            GetDeckOrCard('07e239').takeObject({
                position = {-1.16, 2, -5.74},
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        round_start = getObjectFromGUID("120026").call("getRoundStart")
        if round_start == 1 then
            nom = enter_object.getName()
            local j = 0
            for _, obj in pairs(getObjectFromGUID('d9a457').getObjects()) do
                if obj.name == nom then -- we use name instead of getName() here because objects are still in a bag and cannot use methods on them
                    j = j + 1
                    getObjectFromGUID('d9a457').takeObject({
                        position = pos_vp_encours[j],
                        rotation = {0, 180, 0},
                        smooth = true,
                        guid = obj.guid
                    })
                end
            end
            defenseTroop()
        end
    end

    if zone.guid == vp_zone["Yellow"].guid then
        local name = enter_object.guid
        if name == "2d469b" or name == "ff1ce6" then
            local objets = flag_basin_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Yellow"].takeObject({
                position = flag_basin_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "29a66c" or name == "e25f79" then
            local objets = flag_arrakeen_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Yellow"].takeObject({
                position = flag_arrakeen_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "f131f2" or name == "e123ce" then
            local objets = flag_carthag_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Yellow"].takeObject({
                position = flag_carthag_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end

    end
    if zone.guid == vp_zone["Red"].guid then
        local name = enter_object.guid
        if name == "2d469b" or name == "ff1ce6" then
            local objets = flag_basin_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Red"].takeObject({
                position = flag_basin_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "29a66c" or name == "e25f79" then
            local objets = flag_arrakeen_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Red"].takeObject({
                position = flag_arrakeen_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "f131f2" or name == "e123ce" then
            local objets = flag_carthag_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Red"].takeObject({
                position = flag_carthag_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end

    end
    if zone.guid == vp_zone["Blue"].guid then
        local name = enter_object.guid
        if name == "2d469b" or name == "ff1ce6" then
            local objets = flag_basin_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Blue"].takeObject({
                position = flag_basin_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "29a66c" or name == "e25f79" then
            local objets = flag_arrakeen_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Blue"].takeObject({
                position = flag_arrakeen_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "f131f2" or name == "e123ce" then
            local objets = flag_carthag_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Blue"].takeObject({
                position = flag_carthag_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end

    end

    if zone.guid == vp_zone["Green"].guid then
        local name = enter_object.guid
        if name == "2d469b" or name == "ff1ce6" then
            local objets = flag_basin_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Green"].takeObject({
                position = flag_basin_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "29a66c" or name == "e25f79" then
            local objets = flag_arrakeen_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Green"].takeObject({
                position = flag_arrakeen_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end
        if name == "f131f2" or name == "e123ce" then
            local objets = flag_carthag_zone.getObjects()
            for _, obj in ipairs(objets) do
                if obj.getName() == "Red Flag" or obj.getName() == "Blue Flag" or
                    obj.getName() == "Green Flag" or obj.getName() ==
                    "Yellow Flag" then obj.destruct() end
            end
            flag_bag["Green"].takeObject({
                position = flag_carthag_pos,
                rotation = {0, 180, 0},
                smooth = false
            })
        end

    end
end

function onObjectLeaveScriptingZone(zone, enter_object)

    if zone.guid == zone_reput["Emperor"].guid then
        local faction = "Emperor"
        local name = enter_object.getName()
        local color = ""

        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then
            Wait.time(function() loseFriendship(faction, color) end, 0.7)
        end
    end
    if zone.guid == zone_reput["Spacing Guild"].guid then
        local faction = "Spacing Guild"
        local name = enter_object.getName()
        local color = ""

        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then
            Wait.time(function() loseFriendship(faction, color) end, 0.7)
        end
    end
    if zone.guid == zone_reput["Bene Gesserit"].guid then
        local faction = "Bene Gesserit"
        local name = enter_object.getName()
        local color = ""

        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then
            Wait.time(function() loseFriendship(faction, color) end, 0.7)
        end
    end
    if zone.guid == zone_reput["Fremen"].guid then
        local faction = "Fremen"
        local name = enter_object.getName()
        local color = ""
        if name == faction .. " Faction Red" then
            color = "Red"
        elseif name == faction .. " Faction Blue" then
            color = "Blue"
        elseif name == faction .. " Faction Green" then
            color = "Green"
        elseif name == faction .. " Faction Yellow" then
            color = "Yellow"
        end
        if color == "Red" or color == "Blue" or color == "Green" or color ==
            "Yellow" then
            Wait.time(function() loseFriendship(faction, color) end, 0.7)
        end
    end

end

function Friendship(faction, color)
    local test = 0
    local vp = vp_zone[color].getObjects()
    for _, value in ipairs(vp) do
        if value.getName() == faction .. " Friendship" then test = 1 end
    end
    if test == 0 then give2influence(faction, color) end
end

function loseFriendship(faction, color)
    local test = 0
    local vp = vp_zone[color].getObjects()
    for _, value in ipairs(vp) do
        if value.getName() == faction .. " Friendship" then test = 1 end
        if test == 1 then
            local zoneObjects = vp_zone[color].getObjects()
            for i, object in ipairs(zoneObjects) do
                if object.getName() == faction .. " Friendship" then
                    object.setPositionSmooth({-4.27, 4, 34.54}, false, false)
                end
            end

        end
    end

end

function give2influence(faction, color)

    local zoneObjects = vp_zone[color].getObjects()
    local vpIndex = 1
    for i, object in ipairs(zoneObjects) do
        if object.getDescription() == "VP" then vpIndex = vpIndex + 1 end
    end
    if vpIndex > 13 then vpIndex = 13 end

    bag_friendship[faction].takeObject({
        position = vp_pos[color][vpIndex],
        rotation = {0, 180, 0}
    })

end

function onPlayerTurn(player, previous_player)
  local player_boards = {
    {color = "Green", guid = "e6396b"},
    {color = "Yellow", guid = "036b6a"},
    {color = "Blue", guid = "d72200"},
    {color = "Red", guid = "75561d"}
  }
  for i, board in ipairs(player_boards) do
    local effect_index = 0
    if player and board.color == player.color then
      effect_index = i
    end
    getObjectFromGUID(board.guid).AssetBundle.playTriggerEffect(effect_index)
  end
end
